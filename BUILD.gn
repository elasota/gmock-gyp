config("gmock_public") {
  include_dirs = [ "gmock-1.6.0/include" ]
}

config("gmock_private") {
  include_dirs = [
    "gmock-1.6.0/include",
    "gmock-1.6.0",
  ]
}

config("gtest_public") {
  defines = [ "GTEST_USE_OWN_TR1_TUPLE=1" ]
  include_dirs = [ "gmock-1.6.0/gtest/include" ]
  cflags = [ "-Wno-unused-local-typedef" ]
}

config("gtest_private") {
  defines = [ "GTEST_USE_OWN_TR1_TUPLE=1" ]
  include_dirs = [
    "gmock-1.6.0/gtest/include",
    "gmock-1.6.0/gtest",
  ]
}

static_library("gmock_main") {
  sources = [
    "gmock-1.6.0/src/gmock_main.cc",
  ]
  public_deps = [
    ":gmock",
  ]
}

static_library("gmock") {
  sources = [
    "gmock-1.6.0/src/gmock-cardinalities.cc",
    "gmock-1.6.0/src/gmock-internal-utils.cc",
    "gmock-1.6.0/src/gmock-matchers.cc",
    "gmock-1.6.0/src/gmock-spec-builders.cc",
    "gmock-1.6.0/src/gmock.cc",
  ]
  public_deps = [
    ":gtest",
  ]
  configs += [ ":gmock_private" ]
  public_configs = [ ":gmock_public" ]
}

static_library("gtest") {
  sources = [
    "gmock-1.6.0/gtest/src/gtest-death-test.cc",
    "gmock-1.6.0/gtest/src/gtest-filepath.cc",
    "gmock-1.6.0/gtest/src/gtest-port.cc",
    "gmock-1.6.0/gtest/src/gtest-printers.cc",
    "gmock-1.6.0/gtest/src/gtest-test-part.cc",
    "gmock-1.6.0/gtest/src/gtest-typed-test.cc",
    "gmock-1.6.0/gtest/src/gtest.cc",
  ]
  configs += [ ":gtest_private" ]
  public_configs = [ ":gtest_public" ]
}
